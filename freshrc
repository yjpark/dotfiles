#!/usr/bin/env bash
#
# Used to use freshshell, later switched to a simple own version
# I don't need most of its feature (e.g. from another git repo).
# It's a bit slow, also not working on windows' cygwin environment
# Keep following the syntax, so no need to change this file, and also
# can switch back later if wanted.

USE_OWN_FRESH=1

if [[ "$(uname)" == "Darwin" ]]; then
    echo "Darwin OS Detected"
fi

if [[ "$(uname)" == "Linux" ]]; then
    if [ -f /etc/os-release ] ; then
        source /etc/os-release
        DIST=$ID
    else
        __ROOT__='/data/data/com.termux/files'
        DIST="termux"
    fi
    echo "Linux OS Detected, DIST = $DIST"
fi

if [ -z $USE_OWN_FRESH ] ; then
    # freshshell
    fresh freshshell/fresh 'bin/fresh' --bin
    fresh freshshell/fresh-open 'bin/fresh-open' --bin
else
    . ~/.dotfiles/fresh/fresh
    fresh --begin
    cd ~/.dotfiles
fi

# =====================================================
# Fish shell settings
# run bootstrap-oh-my-fish to install oh-my-fish
fresh 'fish/config/*' --file='~/.config/fish/config.fish'
fresh 'fish/aliases/*' --file='~/.config/fish/aliases.fish'
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'fish/config.osx/*' --file='~/.config/fish/config.fish'
  fresh 'fish/aliases.osx/*' --file='~/.config/fish/aliases.fish'
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'fish/config.linux/*' --file='~/.config/fish/config.fish'
  fresh 'fish/aliases.linux/*' --file='~/.config/fish/aliases.fish'
  if [[ $DIST == "nixos" ]]; then
    fresh 'fish/config.linux.nixos/*' --file='~/.config/fish/config.fish'
  fi
  if [[ $DIST == "ubuntu" || $DIST == "neon" ]]; then
    fresh 'fish/config.linux.ubuntu/*' --file='~/.config/fish/config.fish'
  fi
  if [[ $DIST == "termux" ]]; then
    fresh 'fish/config.linux.termux/*' --file='~/.config/fish/config.fish'
  fi
fi
if [[ "$(uname)" == "MSYS_NT-10.0" ]]; then
  fresh 'fish/config.msys/*' --file='~/.config/fish/config.fish'
  fresh 'fish/aliases.msys/*' --file='~/.config/fish/aliases.fish'
fi
fresh 'fish/functions' --file='~/.config/fish/functions/'
fresh 'fish/custom' --file='~/.config/fish/custom/'
# run fresh-fish-custom to install fish custom stuffs

# =====================================================
# Bash settings
# run bootstrap-bash_it to install bash_it
fresh 'bash/bash_profile' --file='~/.bash_profile'
if [[ "$(uname)" == "MSYS_NT-10.0" ]]; then
  fresh 'bash/bashrc.msys/*' --file='~/.bashrc'
else
  fresh 'bash/bashrc/*' --file='~/.bashrc'
fi
fresh 'bash/aliases/*' --file='~/.bash_it/aliases/custom.aliases.bash'
fresh 'bash/custom/*' --file='~/.bash_it/custom/common.bash'
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'bash/aliases.osx/*' --file='~/.bash_it/aliases/custom.aliases.bash'
  fresh 'bash/custom.osx/*' --file='~/.bash_it/custom/osx.bash'
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'bash/custom.linux/*' --file='~/.bash_it/custom/linux.bash'
  if [[ $DIST == "nixos" ]]; then
    fresh 'bash/custom.linux.nixos/*' --file='~/.bash_it/custom/linux.bash'
  fi
  if [[ $DIST == "ubuntu" || $DIST == "neon" ]]; then
    fresh 'bash/custom.linux.ubuntu/*' --file='~/.bash_it/custom/linux.bash'
  fi
fi

# =====================================================
# NeoVim settings
# run bootstrap-dein to install dein.vim
fresh 'nvim/init.vim' --file='~/.config/nvim/init.vim'
fresh 'nvim/bundle/*' --file='~/.config/nvim/init.bundle.vim' --marker='"'
fresh 'nvim/after/*' --file='~/.config/nvim/init.after.vim' --marker='"'
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'nvim/after.linux/*' --file='~/.config/nvim/init.after.vim' --marker='"'
fi
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'nvim/after.osx/*' --file='~/.config/nvim/init.after.vim' --marker='"'
fi

# =====================================================
# janus settings
# https://github.com/carlhuda/.janus/
# run bootstrap-janus to install janus
fresh 'vim/vimshrc' --file='~/.vim/vimshrc'
fresh 'vim/vimrc' --file='~/.vimrc'
fresh 'vim/vimrc.after/*' --file='~/.vimrc.after' --marker='"'
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'vim/vimrc.after.linux/*' --file='~/.vimrc.after' --marker='"'
fi
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'vim/vimrc.after.osx/*' --file='~/.vimrc.after' --marker='"'
fi
fresh 'vim/vimrc.neo/*' --file='~/.vimrc.neo' --marker='"'
# run fresh-janus to install vim plugins in .janus

# =====================================================
# GIT Settings
fresh 'git/config/*' --file='~/.gitconfig' --marker='#'
fresh 'git/ignore_global/*' --file='~/.gitignore_global' --marker='#'
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'git/config.osx/*' --file='~/.gitconfig' --marker='#'
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'git/config.linux/*' --file='~/.gitconfig' --marker='#'
fi
if [[ "$(uname)" == "MSYS_NT-10.0" ]]; then
  fresh 'git/config.msys/*' --file='~/.gitconfig' --marker='#'
fi

# =====================================================
# tmux
fresh 'tmux/common/*' --file='~/.tmux.conf'
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'tmux/osx/*' --file='~/.tmux.conf'
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'tmux/linux/*' --file='~/.tmux.conf'
fi
if [[ "$(uname)" == "MSYS_NT-10.0" ]]; then
  fresh 'tmux/msys/*' --file='~/.tmux.conf'
fi


# =====================================================
# mu-repo https://github.com/yjpark/mu-repo
if [ -z $USE_OWN_FRESH ] ; then
  fresh yjpark/mu-repo 'mu' --bin
  fresh yjpark/mu-repo 'mu_repo' --file='bin/mu_repo/'
else
  fresh 'fresh/yjpark/mu-repo/mu' --bin
  fresh 'fresh/yjpark/mu-repo/mu_repo' --bin
fi


# =====================================================
# misc settings
fresh 'misc/ctags' --file='~/.ctags'
fresh 'misc/screenrc' --file='~/.screenrc'
fresh 'misc/ideavimrc/*' --file='~/.ideavimrc'
fresh 'misc/gtkrc-2.0' --file='~/.gtkrc-2.0'
fresh 'misc/astylerc' --file='~/.astylerc'

# =====================================================
if [[ "$(uname)" == "Darwin" ]]; then
  if [ -z $USE_OWN_FRESH ] ; then
    fresh yjpark/dayone2evernote 'dayone2evernote' --bin
    fresh yjpark/dayone2evernote '*.applescript' --bin
  else
    fresh 'fresh/yjpark/dayone2evernote/dayone2evernote' --bin
    fresh 'fresh/yjpark/dayone2evernote/*.applescript' --bin
  fi

  if [ -z $USE_OWN_FRESH ] ; then
    # fresh 'osx/Karabiner/private.xml' --file='~/Library/Application Support/Karabiner/private.xml'
    cd ~/.dotfiles
  else
    # cd ~/Library/Application\ Support/Karabiner/
    # rm private.xml
    # _info "ln -s -v ~/.dotfiles/osx/Karabiner/private.xml private.xml"
    # ln -s -v ~/.dotfiles/osx/Karabiner/private.xml private.xml
    # echo ""
    cd ~/.dotfiles
  fi

  fresh 'osx/xvimrc' --file='~/.xvimrc'
  # Since xamarin's autoback will break symlink, copy over here
  mkdir -p ~/Library/XamarinStudio-6.0/KeyBindings
  cp -v ~/.dotfiles/dev/XamarinStudio-6.0/KeyBindings/Custom.mac-kb.xml \
        ~/Library/XamarinStudio-6.0/KeyBindings/
  mkdir -p ~/Library/XamarinStudio-6.0/Policies
  cp -v ~/.dotfiles/dev/XamarinStudio-6.0/Policies/AngelDnD.mdpolicy.xml \
        ~/Library/XamarinStudio-6.0/Policies/
fi

# =====================================================
if [[ "$(uname)" == "Linux" ]]; then
  if [[ "$(hostname)" == "t60" ]]; then
    fresh 'linux/terminator/config.t60' --file='~/.config/terminator/config'
  else
    fresh 'linux/terminator/config' --file='~/.config/terminator/config'
  fi
  fresh 'linux/tilda' --file='~/.config/tilda/'
  fresh 'linux/clipit' --file='~/.config/clipit/'
fi

if [[ "$(hostname)" != "ubuntu" ]]; then
  fresh 'linux/xmodmap/*.rc' --file='~/.Xmodmap'
fi
# =====================================================
# bin
fresh 'bin/common/*' --bin
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'bin/osx/*' --bin
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'bin/linux/*' --bin
  if [[ $DIST == "nixos" ]]; then
    fresh 'bin/linux.nixos/*' --bin
  fi
  if [[ $DIST == "debian" ]]; then
    fresh 'bin/linux.debian/*' --bin
  fi
  if [[ $DIST == "ubuntu" || $DIST == "neon" ]]; then
    fresh 'bin/linux.ubuntu/*' --bin
  fi
fi

# =====================================================
# External stuffs
fresh 'external/bin/*' --bin
if [[ "$(uname)" == "Darwin" ]]; then
  fresh 'external/bin.osx/*' --bin
fi
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'external/bin.linux/*' --bin
fi

# =====================================================
# SSH
# =====================================================
# Private stuffs, for termux, to put default username at the top of config
if [[ $DIST == "termux" ]]; then
    fresh 'ssh/config.private.termux/*' --file='~/.ssh/config'
fi

fresh 'ssh/config/*' --file='~/.ssh/config'

mkdir -p ~/.ssh/control

# =====================================================
# xbindkeysrc
if [[ "$(uname)" == "Linux" ]]; then
  fresh 'linux/xbindkeys/*.rc' --file='~/.xbindkeysrc'
fi

# vimperator
fresh 'common/vimperator/rc/*' --file='~/.vimperatorrc'
mkdir -p ~/.vimperator
rm ~/.vimperator/colors
ln -sv ~/.dotfiles/common/vimperator/colors ~/.vimperator/
rm ~/.vimperator/plugin
ln -sv ~/.dotfiles/common/vimperator/plugin ~/.vimperator/

# =====================================================
# Private stuffs
if [ -d "$HOME/.dotfiles/private" ] ; then
    source ~/.dotfiles/private/private.freshrc
    ~/.dotfiles/private/bin/common/fresh-private

    fresh 'fish/config.private/*' --file='~/.config/fish/config.fish'
    fresh 'bash/custom.private/*' --file='~/.bash_it/custom/common.bash'
    fresh 'ssh/config.private/*' --file='~/.ssh/config'
fi

if [ ! -z $USE_OWN_FRESH ] ; then
    fresh --end
fi

if [[ "$(uname)" == "Linux" ]]; then
  if [[ $DIST == "termux" ]]; then
      bash ~/.dotfiles/bin/linux.termux/fix-termux-bin
  fi
fi

